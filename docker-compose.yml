version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    networks:
      - traefik-network
    environment:
      - POSTGRES_DB=${DATABASES_POSTGRES_DB}
      - POSTGRES_USER=${DATABASES_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DATABASES_POSTGRES_PASSWORD}

  redis:
    image: redis
    networks:
      - traefik-network

    # celery:
    #   build: .
    #   command: celery -A djangodocker worker -l INFO
    #   volumes:
    #     - .:/code
    #   env_file:
    #     - .env
    #   depends_on:
    #     - redis

    # celery-beat:
    #   build: .
    #   command: celery -A djangodocker beat -l INFO
    #   volumes:
    #     - .:/code
    #   env_file:
    #     - .env
    #   depends_on:
    #     - redis

  traefik:
    image: traefik:latest
    ports:
      - 80:80
      - 8080:8080
    networks:
      - traefik-network
    volumes:
      - "./traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  api:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0
    volumes:
      - .:/app
    networks:
      - traefik-network
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.fastapi.rule=Host(`api.localhost`)
      - traefik.http.services.service1.loadbalancer.server.port=8000

volumes:
  postgres_data:
networks:
  traefik-network:
